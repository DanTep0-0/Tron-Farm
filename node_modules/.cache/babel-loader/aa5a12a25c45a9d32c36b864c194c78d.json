{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\work\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\work\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\work\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\work\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\work\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\work\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\work\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\work\\\\Project\\\\src\\\\components\\\\App\\\\index.js\";\nimport React from 'react';\nimport TronWeb from 'tronweb';\nimport Utils from 'utils';\nimport Swal from 'sweetalert2';\nimport TronLinkLogo from './TronLinkLogo.png';\nimport './TronLinkGuide.scss';\nimport './App.scss';\nvar FOUNDATION_ADDRESS = 'TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg'; ////////////////////////////////////////////////////////////////////////////////////\n\nvar contractAddress = 'TWy4tnjATw7XbPypLgFwxYAdF2YiwPrBJM'; /// Add your contract address here\n////////////////////////////////////////////////////////////////////////////////////\n\nvar WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\nvar logo = React.createElement(\"div\", {\n  className: \"logo\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  src: TronLinkLogo,\n  alt: \"TronLink logo\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}));\n\nvar openTronLink = function openTronLink() {\n  window.open(WEBSTORE_URL, '_blank');\n};\n\nvar TronLinkGuide = function TronLinkGuide(props) {\n  var _props$installed = props.installed,\n      installed = _props$installed === void 0 ? false : _props$installed;\n\n  if (!installed) {\n    return React.createElement(\"div\", {\n      className: \"tronLink\",\n      onClick: openTronLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"TronLink Required\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser that can be \", React.createElement(\"a\", {\n      href: WEBSTORE_URL,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"installed from the Chrome Webstore\"), \". Once installed, return back and refresh the page.\")), logo);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"tronLink hover\",\n    onClick: openTronLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Log in Required\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your first wallet or decrypt a previously-created wallet.\")), logo);\n}; //////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      tronWeb: {\n        installed: false,\n        loggedIn: false\n      } // this.changeSide = this.changeSide.bind(this)\n      // this.init = this.init.bind(this)\n      // this.updateBetValue = this.updateBetValue.bind(this)\n\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState({\n                  loading: true\n                });\n                _context.next = 3;\n                return new Promise(function (resolve) {\n                  var tronWebState = {\n                    installed: !!window.tronWeb,\n                    loggedIn: window.tronWeb && window.tronWeb.ready\n                  };\n\n                  if (tronWebState.installed) {\n                    _this2.setState({\n                      tronWeb: tronWebState\n                    });\n\n                    return resolve();\n                  }\n\n                  var tries = 0;\n                  var timer = setInterval(function () {\n                    if (tries >= 10) {\n                      var TRONGRID_API = 'https://api.trongrid.io';\n                      window.tronWeb = new TronWeb(TRONGRID_API, TRONGRID_API, TRONGRID_API);\n\n                      _this2.setState({\n                        tronWeb: {\n                          installed: false,\n                          loggedIn: false\n                        }\n                      });\n\n                      clearInterval(timer);\n                      return resolve();\n                    }\n\n                    tronWebState.installed = !!window.tronWeb;\n                    tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n                    if (!tronWebState.installed) return tries++;\n\n                    _this2.setState({\n                      tronWeb: tronWebState\n                    });\n\n                    resolve();\n                  }, 100);\n                });\n\n              case 3:\n                if (!this.state.tronWeb.loggedIn) {\n                  // Set default address (foundation address) used for contract calls\n                  // Directly overwrites the address object as TronLink disabled the\n                  // function call\n                  window.tronWeb.defaultAddress = {\n                    hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n                    base58: FOUNDATION_ADDRESS\n                  };\n                  window.tronWeb.on('addressChanged', function () {\n                    if (_this2.state.tronWeb.loggedIn) return;\n\n                    _this2.setState({\n                      tronWeb: {\n                        installed: true,\n                        loggedIn: true\n                      }\n                    });\n                  });\n                }\n\n                _context.next = 6;\n                return Utils.setTronWeb(window.tronWeb, contractAddress);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }() // document.getElementById('name-0').textContent = 'Player1';\n    // document.getElementById('name-1').textContent = 'Player2';\n    // document.querySelector('.player-0-panel').classList.remove('active');\n    // document.querySelector('.player-1-panel').classList.remove('active');\n    // document.querySelector('.player-0-panel').classList.add('active');\n    // document.querySelector('.dice').classList.remove('displaynone');\n    // cube.classList.add('animation-1');\n    // document.getElementById(\"dice-game\").style.display = \"block\";\n    // document.getElementById(\"roll-button\").style.display = \"block\";\n\n  }, {\n    key: \"play\",\n    value: function play() {\n      // tronWebState.installed = !!window.tronWeb;\n      // tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n      console.log(this.state);\n      document.querySelector('.forButton').classList.add('dnone');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (!this.state.tronWeb.installed) return React.createElement(TronLinkGuide, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      });\n      if (!this.state.tronWeb.loggedIn) return React.createElement(TronLinkGuide, {\n        installed: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        className: \"forButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"play\",\n        onClick: function onClick(event) {\n          event.preventDefault();\n\n          _this3.play();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Play\")) // <button className=\"btn btn-primary\" onClick={(event) => {event.preventDefault()\n      //                                                   this.init()}  }>Start New game </button>\n      //  <input style={{ width:\"100px\" }} value='0' onChange={this.updateBetValue}/>\n      //\n      // <button className=\"btn-roll\" onClick={(event) => {event.preventDefault()\n      //                                                                 this.roll()}  }><i className=\"fas fa-dice fa-5x\"></i></button>\n      ;\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["D:\\work\\Project\\src\\components\\App\\index.js"],"names":["React","TronWeb","Utils","Swal","TronLinkLogo","FOUNDATION_ADDRESS","contractAddress","WEBSTORE_URL","logo","openTronLink","window","open","TronLinkGuide","props","installed","App","state","tronWeb","loggedIn","setState","loading","Promise","resolve","tronWebState","ready","tries","timer","setInterval","TRONGRID_API","clearInterval","defaultAddress","hex","address","toHex","base58","on","setTronWeb","console","log","document","querySelector","classList","add","event","preventDefault","play","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TronWeb from 'tronweb';\nimport Utils from 'utils';\nimport Swal from 'sweetalert2';\nimport TronLinkLogo from './TronLinkLogo.png';\nimport './TronLinkGuide.scss';\n\n\nimport './App.scss';\n\nconst FOUNDATION_ADDRESS = 'TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg';\n\n////////////////////////////////////////////////////////////////////////////////////\nconst contractAddress = 'TWy4tnjATw7XbPypLgFwxYAdF2YiwPrBJM';   /// Add your contract address here\n////////////////////////////////////////////////////////////////////////////////////\n\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\n\nconst logo = (\n    <div className='logo'>\n        <img src={ TronLinkLogo } alt='TronLink logo' />\n    </div>\n);\n\nconst openTronLink = () => {\n    window.open(WEBSTORE_URL, '_blank');\n};\n\nconst TronLinkGuide = props => {\n    const {\n        installed = false\n    } = props;\n\n    if(!installed) {\n        return (\n            <div className='tronLink' onClick={ openTronLink }>\n                <div className='info'>\n                    <h1>TronLink Required</h1>\n                    <p>\n                        To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser\n                        that can be <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\n                        Once installed, return back and refresh the page.\n                    </p>\n                </div>\n                { logo }\n            </div>\n        );\n    }\n\n    return (\n        <div className='tronLink hover' onClick={ openTronLink }>\n            <div className='info'>\n                <h1>Log in Required</h1>\n                <p>\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\n                    first wallet or decrypt a previously-created wallet.\n                </p>\n            </div>\n            { logo }\n        </div>\n    );\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n              tronWeb: {\n                  installed: false,\n                  loggedIn: false\n              },\n            }\n        // this.changeSide = this.changeSide.bind(this)\n        // this.init = this.init.bind(this)\n        // this.updateBetValue = this.updateBetValue.bind(this)\n    }\n\n    async componentDidMount() {\n\n        this.setState({loading:true})\n        await new Promise(resolve => {\n            const tronWebState = {\n                installed: !!window.tronWeb,\n                loggedIn: window.tronWeb && window.tronWeb.ready\n            };\n\n            if(tronWebState.installed) {\n                this.setState({\n                    tronWeb:\n                    tronWebState\n                });\n\n                return resolve();\n            }\n\n            let tries = 0;\n\n            const timer = setInterval(() => {\n                if(tries >= 10) {\n                    const TRONGRID_API = 'https://api.trongrid.io';\n\n                    window.tronWeb = new TronWeb(\n                        TRONGRID_API,\n                        TRONGRID_API,\n                        TRONGRID_API\n                    );\n\n                    this.setState({\n                        tronWeb: {\n                            installed: false,\n                            loggedIn: false\n                        }\n                    });\n\n                    clearInterval(timer);\n                    return resolve();\n                }\n\n                tronWebState.installed = !!window.tronWeb;\n                tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n\n                if(!tronWebState.installed)\n                    return tries++;\n\n                this.setState({\n                    tronWeb: tronWebState\n                });\n\n                resolve();\n            }, 100);\n        });\n\n        if(!this.state.tronWeb.loggedIn) {\n            // Set default address (foundation address) used for contract calls\n            // Directly overwrites the address object as TronLink disabled the\n            // function call\n            window.tronWeb.defaultAddress = {\n                hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n                base58: FOUNDATION_ADDRESS\n            };\n\n            window.tronWeb.on('addressChanged', () => {\n                if(this.state.tronWeb.loggedIn)\n                    return;\n\n                this.setState({\n                    tronWeb: {\n                        installed: true,\n                        loggedIn: true\n                    }\n                });\n            });\n        }\n\n        await Utils.setTronWeb(window.tronWeb, contractAddress);\n\n\n    }\n\n    // document.getElementById('name-0').textContent = 'Player1';\n    // document.getElementById('name-1').textContent = 'Player2';\n    // document.querySelector('.player-0-panel').classList.remove('active');\n    // document.querySelector('.player-1-panel').classList.remove('active');\n    // document.querySelector('.player-0-panel').classList.add('active');\n    // document.querySelector('.dice').classList.remove('displaynone');\n    // cube.classList.add('animation-1');\n    // document.getElementById(\"dice-game\").style.display = \"block\";\n    // document.getElementById(\"roll-button\").style.display = \"block\";\n\n\n\n\n    play(){\n      // tronWebState.installed = !!window.tronWeb;\n      // tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n      console.log(this.state);\n      document.querySelector('.forButton').classList.add('dnone');\n    }\n\n    render() {\n        if(!this.state.tronWeb.installed)\n            return <TronLinkGuide />;\n\n        if(!this.state.tronWeb.loggedIn)\n            return <TronLinkGuide installed />;\n\n        return (\n          <div className = \"forButton\">\n            <button className=\"play\" onClick={(event) => {event.preventDefault()\n                                                               this.play()}  }>Play</button>\n          </div>\n      // <button className=\"btn btn-primary\" onClick={(event) => {event.preventDefault()\n      //                                                   this.init()}  }>Start New game </button>\n\n              //  <input style={{ width:\"100px\" }} value='0' onChange={this.updateBetValue}/>\n              //\n              // <button className=\"btn-roll\" onClick={(event) => {event.preventDefault()\n              //                                                                 this.roll()}  }><i className=\"fas fa-dice fa-5x\"></i></button>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}