{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\work\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\work\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\work\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\work\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\work\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\work\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\work\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\work\\\\Project\\\\src\\\\components\\\\App\\\\index.js\";\nimport React from 'react';\nimport TronLinkGuide from 'components/TronLinkGuide';\nimport TronWeb from 'tronweb';\nimport Utils from 'utils';\nimport Swal from 'sweetalert2';\nimport './App.scss';\nvar FOUNDATION_ADDRESS = 'TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg'; ////////////////////////////////////////////////////////////////////////////////////\n\nvar contractAddress = 'TWy4tnjATw7XbPypLgFwxYAdF2YiwPrBJM'; /// Add your contract address here\n////////////////////////////////////////////////////////////////////////////////////\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      tronWeb: {\n        installed: false,\n        loggedIn: false\n      } // this.changeSide = this.changeSide.bind(this)\n      // this.init = this.init.bind(this)\n      // this.updateBetValue = this.updateBetValue.bind(this)\n\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState({\n                  loading: true\n                });\n                _context.next = 3;\n                return new Promise(function (resolve) {\n                  var tronWebState = {\n                    installed: !!window.tronWeb,\n                    loggedIn: window.tronWeb && window.tronWeb.ready\n                  };\n\n                  if (tronWebState.installed) {\n                    _this2.setState({\n                      tronWeb: tronWebState\n                    });\n\n                    return resolve();\n                  }\n\n                  var tries = 0;\n                  var timer = setInterval(function () {\n                    if (tries >= 10) {\n                      var TRONGRID_API = 'https://api.trongrid.io';\n                      window.tronWeb = new TronWeb(TRONGRID_API, TRONGRID_API, TRONGRID_API);\n\n                      _this2.setState({\n                        tronWeb: {\n                          installed: false,\n                          loggedIn: false\n                        }\n                      });\n\n                      clearInterval(timer);\n                      return resolve();\n                    }\n\n                    tronWebState.installed = !!window.tronWeb;\n                    tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n                    if (!tronWebState.installed) return tries++;\n\n                    _this2.setState({\n                      tronWeb: tronWebState\n                    });\n\n                    resolve();\n                  }, 100);\n                });\n\n              case 3:\n                if (!this.state.tronWeb.loggedIn) {\n                  // Set default address (foundation address) used for contract calls\n                  // Directly overwrites the address object as TronLink disabled the\n                  // function call\n                  window.tronWeb.defaultAddress = {\n                    hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n                    base58: FOUNDATION_ADDRESS\n                  };\n                  window.tronWeb.on('addressChanged', function () {\n                    if (_this2.state.tronWeb.loggedIn) return;\n\n                    _this2.setState({\n                      tronWeb: {\n                        installed: true,\n                        loggedIn: true\n                      }\n                    });\n                  });\n                }\n\n                _context.next = 6;\n                return Utils.setTronWeb(window.tronWeb, contractAddress);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }() // document.getElementById('name-0').textContent = 'Player1';\n    // document.getElementById('name-1').textContent = 'Player2';\n    // document.querySelector('.player-0-panel').classList.remove('active');\n    // document.querySelector('.player-1-panel').classList.remove('active');\n    // document.querySelector('.player-0-panel').classList.add('active');\n    // document.querySelector('.dice').classList.remove('displaynone');\n    // cube.classList.add('animation-1');\n    // document.getElementById(\"dice-game\").style.display = \"block\";\n    // document.getElementById(\"roll-button\").style.display = \"block\";\n\n  }, {\n    key: \"play\",\n    value: function play() {\n      if (!!window.tronWeb && window.tronWeb.ready) {\n        document.querySelector('.forButton').classList.add('dnone');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (!this.state.tronWeb.installed) return React.createElement(TronLinkGuide, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      });\n      if (!this.state.tronWeb.loggedIn) return React.createElement(TronLinkGuide, {\n        installed: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        className: \"allReact\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"forButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"play\",\n        onClick: function onClick(event) {\n          event.preventDefault();\n\n          _this3.play();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Play\")), React.createElement(\"ul\", {\n        className: \"aboutGame\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"abgl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"About Game:\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Players:\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Invested:\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Paid Out:\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Animals:\"))) // <button className=\"btn btn-primary\" onClick={(event) => {event.preventDefault()\n      //                                                   this.init()}  }>Start New game </button>\n      //  <input style={{ width:\"100px\" }} value='0' onChange={this.updateBetValue}/>\n      //\n      // <button className=\"btn-roll\" onClick={(event) => {event.preventDefault()\n      //                                                                 this.roll()}  }><i className=\"fas fa-dice fa-5x\"></i></button>\n      ;\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["D:\\work\\Project\\src\\components\\App\\index.js"],"names":["React","TronLinkGuide","TronWeb","Utils","Swal","FOUNDATION_ADDRESS","contractAddress","App","props","state","tronWeb","installed","loggedIn","setState","loading","Promise","resolve","tronWebState","window","ready","tries","timer","setInterval","TRONGRID_API","clearInterval","defaultAddress","hex","address","toHex","base58","on","setTronWeb","document","querySelector","classList","add","event","preventDefault","play","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TronLinkGuide from 'components/TronLinkGuide';\nimport TronWeb from 'tronweb';\nimport Utils from 'utils';\nimport Swal from 'sweetalert2';\n\n\nimport './App.scss';\n\nconst FOUNDATION_ADDRESS = 'TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg';\n\n////////////////////////////////////////////////////////////////////////////////////\nconst contractAddress = 'TWy4tnjATw7XbPypLgFwxYAdF2YiwPrBJM';   /// Add your contract address here\n////////////////////////////////////////////////////////////////////////////////////\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n              tronWeb: {\n                  installed: false,\n                  loggedIn: false\n              },\n            }\n        // this.changeSide = this.changeSide.bind(this)\n        // this.init = this.init.bind(this)\n        // this.updateBetValue = this.updateBetValue.bind(this)\n    }\n\n    async componentDidMount() {\n\n        this.setState({loading:true})\n        await new Promise(resolve => {\n            const tronWebState = {\n                installed: !!window.tronWeb,\n                loggedIn: window.tronWeb && window.tronWeb.ready\n            };\n\n            if(tronWebState.installed) {\n                this.setState({\n                    tronWeb:\n                    tronWebState\n                });\n\n                return resolve();\n            }\n\n            let tries = 0;\n\n            const timer = setInterval(() => {\n                if(tries >= 10) {\n                    const TRONGRID_API = 'https://api.trongrid.io';\n\n                    window.tronWeb = new TronWeb(\n                        TRONGRID_API,\n                        TRONGRID_API,\n                        TRONGRID_API\n                    );\n\n                    this.setState({\n                        tronWeb: {\n                            installed: false,\n                            loggedIn: false\n                        }\n                    });\n\n                    clearInterval(timer);\n                    return resolve();\n                }\n\n                tronWebState.installed = !!window.tronWeb;\n                tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n\n                if(!tronWebState.installed)\n                    return tries++;\n\n                this.setState({\n                    tronWeb: tronWebState\n                });\n\n                resolve();\n            }, 100);\n        });\n\n        if(!this.state.tronWeb.loggedIn) {\n            // Set default address (foundation address) used for contract calls\n            // Directly overwrites the address object as TronLink disabled the\n            // function call\n            window.tronWeb.defaultAddress = {\n                hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n                base58: FOUNDATION_ADDRESS\n            };\n\n            window.tronWeb.on('addressChanged', () => {\n                if(this.state.tronWeb.loggedIn)\n                    return;\n\n                this.setState({\n                    tronWeb: {\n                        installed: true,\n                        loggedIn: true\n                    }\n                });\n            });\n        }\n\n        await Utils.setTronWeb(window.tronWeb, contractAddress);\n\n\n    }\n\n    // document.getElementById('name-0').textContent = 'Player1';\n    // document.getElementById('name-1').textContent = 'Player2';\n    // document.querySelector('.player-0-panel').classList.remove('active');\n    // document.querySelector('.player-1-panel').classList.remove('active');\n    // document.querySelector('.player-0-panel').classList.add('active');\n    // document.querySelector('.dice').classList.remove('displaynone');\n    // cube.classList.add('animation-1');\n    // document.getElementById(\"dice-game\").style.display = \"block\";\n    // document.getElementById(\"roll-button\").style.display = \"block\";\n\n\n\n\n    play(){\n        if(!!window.tronWeb && window.tronWeb.ready){\n        document.querySelector('.forButton').classList.add('dnone');}\n\n    }\n\n    render() {\n        if(!this.state.tronWeb.installed)\n            return <TronLinkGuide />;\n\n        if(!this.state.tronWeb.loggedIn)\n            return <TronLinkGuide installed />;\n\n        return (\n          <div className = \"allReact\">\n          <div className = \"forButton\">\n            <button className=\"play\" onClick={(event) => {event.preventDefault()\n                                                               this.play()}  }>Play</button>\n          </div>\n          <ul className = \"aboutGame\">\n              <li className = \"abgl\"></li>\n              <li>About Game:</li>\n              <li>Players:</li>\n              <li>Invested:</li>\n              <li>Paid Out:</li>\n              <li>Animals:</li>\n            </ul>\n          </div>\n      // <button className=\"btn btn-primary\" onClick={(event) => {event.preventDefault()\n      //                                                   this.init()}  }>Start New game </button>\n\n              //  <input style={{ width:\"100px\" }} value='0' onChange={this.updateBetValue}/>\n              //\n              // <button className=\"btn-roll\" onClick={(event) => {event.preventDefault()\n              //                                                                 this.roll()}  }><i className=\"fas fa-dice fa-5x\"></i></button>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}