{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\work\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\work\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar utils = {\n  tronWeb: false,\n  contract: false,\n  setTronWeb: function () {\n    var _setTronWeb = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(tronWeb, contractAddress) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('contractAddress', contractAddress);\n              this.tronWeb = tronWeb;\n              _context.next = 4;\n              return tronWeb.contract().at(contractAddress);\n\n            case 4:\n              this.contract = _context.sent;\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function setTronWeb(_x, _x2) {\n      return _setTronWeb.apply(this, arguments);\n    };\n  }()\n};\nexport default utils;","map":{"version":3,"sources":["D:\\work\\Project\\src\\utils\\index.js"],"names":["utils","tronWeb","contract","setTronWeb","contractAddress","console","log","at"],"mappings":";;AACA,IAAMA,KAAK,GAAG;AACVC,EAAAA,OAAO,EAAE,KADC;AAEVC,EAAAA,QAAQ,EAAE,KAFA;AAIJC,EAAAA,UAJI;AAAA;AAAA;AAAA,8CAIOF,OAJP,EAIgBG,eAJhB;AAAA;AAAA;AAAA;AAAA;AAKNC,cAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,eAA/B;AACA,mBAAKH,OAAL,GAAeA,OAAf;AANM;AAAA,qBAOgBA,OAAO,CAACC,QAAR,GAAmBK,EAAnB,CAAsBH,eAAtB,CAPhB;;AAAA;AAON,mBAAKF,QAPC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd;AAYA,eAAeF,KAAf","sourcesContent":["\nconst utils = {\n    tronWeb: false,\n    contract: false,\n\n    async setTronWeb(tronWeb, contractAddress) {\n        console.log('contractAddress', contractAddress)\n        this.tronWeb = tronWeb;\n        this.contract = await tronWeb.contract().at(contractAddress)\n    },\n\n};\n\nexport default utils;\n"]},"metadata":{},"sourceType":"module"}