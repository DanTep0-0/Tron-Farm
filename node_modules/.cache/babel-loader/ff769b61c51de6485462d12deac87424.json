{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\work\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\work\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\work\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\work\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\work\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\work\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\work\\\\Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\work\\\\Project\\\\src\\\\components\\\\App\\\\index.js\";\nimport React from 'react';\nimport TronLinkGuide from 'components/TronLinkGuide';\nimport TronWeb from 'tronweb';\nimport Utils from 'utils';\nimport Swal from 'sweetalert2';\nimport './App.scss';\nvar FOUNDATION_ADDRESS = 'TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg'; ////////////////////////////////////////////////////////////////////////////////////\n\nvar contractAddress = 'TWqFZbEqEEixWz6XntdpJwW2Hsv3bYhgb9'; /// Add your contract address here\n////////////////////////////////////////////////////////////////////////////////////\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      tronWeb: {\n        installed: false,\n        loggedIn: false\n      },\n      Players: '...',\n      Invested: '...',\n      PaidOut: '...',\n      Animals: '...' // this.changeSide = this.changeSide.bind(this)\n      // this.init = this.init.bind(this)\n      // this.updateBetValue = this.updateBetValue.bind(this)\n      // document.getElementById('name-0').textContent = 'Player1';\n      // document.getElementById('name-1').textContent = 'Player2';\n      // document.querySelector('.player-0-panel').classList.remove('active');\n      // document.querySelector('.player-1-panel').classList.remove('active');\n      // document.querySelector('.player-0-panel').classList.add('active');\n      // document.querySelector('.dice').classList.remove('displaynone');\n      // cube.classList.add('animation-1');\n      // document.getElementById(\"dice-game\").style.display = \"block\";\n      // document.getElementById(\"roll-button\").style.display = \"block\";\n      // <button className=\"btn btn-primary\" onClick={(event) => {event.preventDefault()\n      //                                                   this.init()}  }>Start New game </button>\n      //  <input style={{ width:\"100px\" }} value='0' onChange={this.updateBetValue}/>\n      //\n      // <button className=\"btn-roll\" onClick={(event) => {event.preventDefault()\n      //                     this.roll()}  }><i className=\"fas fa-dice fa-5x\"></i></button>\n\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState({\n                  loading: true\n                });\n                _context.next = 3;\n                return new Promise(function (resolve) {\n                  var tronWebState = {\n                    installed: !!window.tronWeb,\n                    loggedIn: window.tronWeb && window.tronWeb.ready\n                  };\n\n                  if (tronWebState.installed) {\n                    _this2.setState({\n                      tronWeb: tronWebState\n                    });\n\n                    return resolve();\n                  }\n\n                  var tries = 0;\n                  var timer = setInterval(function () {\n                    if (tries >= 10) {\n                      var TRONGRID_API = 'https://api.trongrid.io';\n                      window.tronWeb = new TronWeb(TRONGRID_API, TRONGRID_API, TRONGRID_API);\n\n                      _this2.setState({\n                        tronWeb: {\n                          installed: false,\n                          loggedIn: false\n                        }\n                      });\n\n                      clearInterval(timer);\n                      return resolve();\n                    }\n\n                    tronWebState.installed = !!window.tronWeb;\n                    tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n                    if (!tronWebState.installed) return tries++;\n\n                    _this2.setState({\n                      tronWeb: tronWebState\n                    });\n\n                    resolve();\n                  }, 100);\n                });\n\n              case 3:\n                if (!this.state.tronWeb.loggedIn) {\n                  // Set default address (foundation address) used for contract calls\n                  // Directly overwrites the address object as TronLink disabled the\n                  // function call\n                  window.tronWeb.defaultAddress = {\n                    hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n                    base58: FOUNDATION_ADDRESS\n                  };\n                  window.tronWeb.on('addressChanged', function () {\n                    if (_this2.state.tronWeb.loggedIn) return;\n\n                    _this2.setState({\n                      tronWeb: {\n                        installed: true,\n                        loggedIn: true\n                      }\n                    });\n                  });\n                }\n\n                _context.next = 6;\n                return Utils.setTronWeb(window.tronWeb, contractAddress);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"fetchData\",\n    value: function () {\n      var _fetchData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var result1, result2, result3, result4;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Utils.contract.totalPlayers().call();\n\n              case 2:\n                result1 = _context2.sent.toNumber();\n                _context2.next = 5;\n                return Utils.contract.totalInvested().call();\n\n              case 5:\n                result2 = _context2.sent.toNumber();\n                _context2.next = 8;\n                return Utils.contract.totalPayout().call();\n\n              case 8:\n                result3 = _context2.sent.toNumber();\n                _context2.next = 11;\n                return Utils.contract.totalAnimals().call();\n\n              case 11:\n                result4 = _context2.sent.toNumber();\n                this.setState({\n                  Players: result1,\n                  Invested: result2,\n                  PaidOut: result3,\n                  Animals: result4\n                });\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function fetchData() {\n        return _fetchData.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"play\",\n    value: function play() {\n      if (!!window.tronWeb && window.tronWeb.ready) {\n        document.querySelector('.forButton').classList.add('dnone');\n        document.querySelector('.game').classList.remove('dnone');\n      }\n\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (!this.state.tronWeb.installed) return React.createElement(TronLinkGuide, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      });\n      if (!this.state.tronWeb.loggedIn) return React.createElement(TronLinkGuide, {\n        installed: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        className: \"allReact\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"forButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"play\",\n        onClick: function onClick(event) {\n          event.preventDefault();\n\n          _this3.play();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Play\")), React.createElement(\"div\", {\n        className: \"game dnone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"aboutGame\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"abgl abgl1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"About Game\"), React.createElement(\"li\", {\n        className: \"abgl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Players:\", React.createElement(\"p\", {\n        className: \"num\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, this.state.Players)), React.createElement(\"li\", {\n        className: \"abgl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Invested:\", React.createElement(\"p\", {\n        className: \"num\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, this.state.Invested)), React.createElement(\"li\", {\n        className: \"abgl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Paid Out:\", React.createElement(\"p\", {\n        className: \"num\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, this.state.PaidOut)), React.createElement(\"li\", {\n        className: \"abgl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Animals:\", React.createElement(\"p\", {\n        className: \"num\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, this.state.Animals))), React.createElement(\"div\", {\n        className: \"animalsfp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"animal chicken\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"animal pig\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"toInvest\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"animalssp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"animal sheep\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"animal cow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"animal goldenEgg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["D:\\work\\Project\\src\\components\\App\\index.js"],"names":["React","TronLinkGuide","TronWeb","Utils","Swal","FOUNDATION_ADDRESS","contractAddress","App","props","state","tronWeb","installed","loggedIn","Players","Invested","PaidOut","Animals","setState","loading","Promise","resolve","tronWebState","window","ready","tries","timer","setInterval","TRONGRID_API","clearInterval","defaultAddress","hex","address","toHex","base58","on","setTronWeb","contract","totalPlayers","call","result1","toNumber","totalInvested","result2","totalPayout","result3","totalAnimals","result4","document","querySelector","classList","add","remove","fetchData","event","preventDefault","play","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TronLinkGuide from 'components/TronLinkGuide';\nimport TronWeb from 'tronweb';\nimport Utils from 'utils';\nimport Swal from 'sweetalert2';\n\n\nimport './App.scss';\n\nconst FOUNDATION_ADDRESS = 'TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg';\n\n////////////////////////////////////////////////////////////////////////////////////\nconst contractAddress = 'TWqFZbEqEEixWz6XntdpJwW2Hsv3bYhgb9';   /// Add your contract address here\n////////////////////////////////////////////////////////////////////////////////////\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n              tronWeb: {\n                  installed: false,\n                  loggedIn: false\n              },\n              Players: '...',\n              Invested: '...',\n              PaidOut: '...',\n              Animals: '...'\n\n            }\n        // this.changeSide = this.changeSide.bind(this)\n        // this.init = this.init.bind(this)\n        // this.updateBetValue = this.updateBetValue.bind(this)\n        // document.getElementById('name-0').textContent = 'Player1';\n        // document.getElementById('name-1').textContent = 'Player2';\n        // document.querySelector('.player-0-panel').classList.remove('active');\n        // document.querySelector('.player-1-panel').classList.remove('active');\n        // document.querySelector('.player-0-panel').classList.add('active');\n        // document.querySelector('.dice').classList.remove('displaynone');\n        // cube.classList.add('animation-1');\n        // document.getElementById(\"dice-game\").style.display = \"block\";\n        // document.getElementById(\"roll-button\").style.display = \"block\";\n        // <button className=\"btn btn-primary\" onClick={(event) => {event.preventDefault()\n        //                                                   this.init()}  }>Start New game </button>\n\n                //  <input style={{ width:\"100px\" }} value='0' onChange={this.updateBetValue}/>\n                //\n                // <button className=\"btn-roll\" onClick={(event) => {event.preventDefault()\n                //                     this.roll()}  }><i className=\"fas fa-dice fa-5x\"></i></button>\n    }\n\n    async componentDidMount() {\n\n        this.setState({loading:true})\n        await new Promise(resolve => {\n            const tronWebState = {\n                installed: !!window.tronWeb,\n                loggedIn: window.tronWeb && window.tronWeb.ready\n            };\n\n            if(tronWebState.installed) {\n                this.setState({\n                    tronWeb:\n                    tronWebState\n                });\n\n                return resolve();\n            }\n\n            let tries = 0;\n\n            const timer = setInterval(() => {\n                if(tries >= 10) {\n                    const TRONGRID_API = 'https://api.trongrid.io';\n\n                    window.tronWeb = new TronWeb(\n                        TRONGRID_API,\n                        TRONGRID_API,\n                        TRONGRID_API\n                    );\n\n                    this.setState({\n                        tronWeb: {\n                            installed: false,\n                            loggedIn: false\n                        }\n                    });\n\n                    clearInterval(timer);\n                    return resolve();\n                }\n\n                tronWebState.installed = !!window.tronWeb;\n                tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n\n                if(!tronWebState.installed)\n                    return tries++;\n\n                this.setState({\n                    tronWeb: tronWebState\n                });\n\n                resolve();\n            }, 100);\n        });\n\n        if(!this.state.tronWeb.loggedIn) {\n            // Set default address (foundation address) used for contract calls\n            // Directly overwrites the address object as TronLink disabled the\n            // function call\n            window.tronWeb.defaultAddress = {\n                hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n                base58: FOUNDATION_ADDRESS\n            };\n\n            window.tronWeb.on('addressChanged', () => {\n                if(this.state.tronWeb.loggedIn)\n                    return;\n\n                this.setState({\n                    tronWeb: {\n                        installed: true,\n                        loggedIn: true\n                    }\n                });\n            });\n        }\n\n        await Utils.setTronWeb(window.tronWeb, contractAddress);\n\n\n    }\n    async fetchData(){\n      const result1 = (await Utils.contract.totalPlayers().call()).toNumber();\n      const result2 = (await Utils.contract.totalInvested().call()).toNumber();\n      const result3 = (await Utils.contract.totalPayout().call()).toNumber();\n      const result4 = (await Utils.contract.totalAnimals().call()).toNumber();\n      this.setState({\n        Players: result1,\n        Invested: result2,\n        PaidOut: result3,\n        Animals: result4\n      });\n    }\n    play(){\n        if(!!window.tronWeb && window.tronWeb.ready){\n        document.querySelector('.forButton').classList.add('dnone');\n        document.querySelector('.game').classList.remove('dnone');}\n\n        this.fetchData();\n    }\n\n    render() {\n        if(!this.state.tronWeb.installed)\n            return <TronLinkGuide />;\n\n        if(!this.state.tronWeb.loggedIn)\n            return <TronLinkGuide installed />;\n\n        return (\n          <div className = \"allReact\">\n          <div className = \"forButton\">\n            <button className=\"play\" onClick={(event) => {event.preventDefault()\n                                                               this.play()}  }>Play</button>\n          </div>\n          <div className = \"game dnone\">\n          <ul className = \"aboutGame\">\n              <li className = \"abgl abgl1\">About Game</li>\n              <li className = \"abgl\">Players:<p className = \"num\">{this.state.Players}</p></li>\n              <li className = \"abgl\">Invested:<p className = \"num\">{this.state.Invested}</p></li>\n              <li className = \"abgl\">Paid Out:<p className = \"num\">{this.state.PaidOut}</p></li>\n              <li className = \"abgl\">Animals:<p className = \"num\">{this.state.Animals}</p></li>\n            </ul>\n            <div className = \"animalsfp\">\n              <div className = \"animal chicken\"></div>\n              <div className = \"animal pig\"></div>\n            </div>\n            <div className = \"toInvest\"></div>\n            <div className = \"animalssp\">\n              <div className = \"animal sheep\"></div>\n              <div className = \"animal cow\"></div>\n              <div className = \"animal goldenEgg\"></div>\n            </div>\n          </div>\n          </div>\n\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}